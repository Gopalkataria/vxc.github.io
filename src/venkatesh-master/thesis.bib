@PhdThesis{Choppella-thesis-02,
keywords = {thesis, unification, theory, rewrite-systems, proof-theory, programming-languages, types, logic, iu},
  author = 	 "Venkatesh Choppella",
  title = 	 "Unification Source-tracking with Application to Diagnosis of Type Inference",
  school = 	 "Indiana University",
  year = 	 "2002",
  OPTcrossref =  "",
  OPTkey = 	 "",
  OPTaddress = 	 "",
  month = 	 "August",
  OPTtype = 	 "",
  note = 	 "IUCS Tech Report TR566",
  url = {http://www.cs.indiana.edu/cgi-bin/techreports/TRNNN.cgi?trnum=TR566},
  pdf = {./papers/2002-tr566.pdf},
  OPTabstract = {
Prior diagnoses in unification-based type reconstruction systems
have either missed information that is relevant, presented
irrelevant details, or both.  

We use a framework based on the Unification Logics of
Le~Chenadec to define, derive and simplify proof-based
source-tracking for term unification.  The objects of
source-tracking are proofs in this deduction system, and
correspond to path expressions over a unification graph whose
labels form a semi-Dyck language of balanced parentheses.
Simplification of source-tracking information is implemented as
proof normalization in the rewrite system for free groups.
Subject-reduction properties guarantee that normalization
preserves the semantics of deductions.  The presentation of the
logic facilitates proof construction by a simple extension to
standard unification algorithms.

We apply unification source-tracking to type inference in the
Curry-Hindley type system.  Programs are represented as systems
of syntax equations.  Program slices correspond to weakenings of
syntax and type equations.  A constraint generation function
maps weakenings of type equations to weakenings of syntax
equations.  Source-tracking information is defined in terms of
the inverse of this generating function.

Unification is central to many applications of symbolic
computation and artificial intelligence, including computer
algebra, automated theorem proving, expert systems, and
programming language type systems.  Source-tracking is a
debugging technique based on tracing the execution of a program
to identify those subparts that contribute to the result of the
execution.
}
}

@MastersThesis{1987-choppella-mtech-thesis,
  keywords = {thesis, programming-languages, compilers, iitm},
  author = 		 {Venkatesh Choppella},
  title = 		 {Implementation of ML on the SECD machine},
  school = 		 {IIT Madras},
  year = 		 {1987},
  OPTkey = 		 {},
  type = 	 {MTech thesis},
  OPTaddress = 	 {},
  OPTmonth = 	 {},
  OPTnote = 	 {},
  OPTannote = 	 {}
}

